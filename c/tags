!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BASE	C.c	200;"	d	file:
BASE	C.c	215;"	d	file:
FILES_PER_CACHEDIR	C.c	22;"	d	file:
MAX_TRIES	C.c	178;"	d	file:
MAX_TRIES	C.c	195;"	d	file:
VERSION_INT_STR	C.c	19;"	d	file:
VERSION_STR	C.c	18;"	d	file:
add_spec	C.c	/^static void add_spec(void *ptr, int size)$/;"	f	file:
assert_cmdline	C.c	/^static void assert_cmdline(char *option, char *file, int line)$/;"	f	file:
build_store_dir	C.c	/^static void build_store_dir(void)$/;"	f	file:
c_file	C.c	/^char *c_file;$/;"	v
call_proc	C.c	/^static int call_proc(char **argv, char *errmsg)$/;"	f	file:
check_specs	C.c	/^static int check_specs(void)$/;"	f	file:
cleanup	C.c	/^static void cleanup(void)$/;"	f	file:
cmd_error	C.c	/^void cmd_error(char *fmt, ...)$/;"	f
exec_file	C.c	/^char *exec_file;$/;"	v
gcc	C.c	/^char **gcc;$/;"	v
get_line	C.c	/^static char *get_line(FILE * fp)$/;"	f	file:
keep_files	C.c	/^int keep_files;$/;"	v
lopts	C.c	/^char **lopts;$/;"	v
main	C.c	/^int main(int argc, char **argv)$/;"	f
make_temp_dir	C.c	/^static void make_temp_dir(void)$/;"	f	file:
oneliner	C.c	/^int oneliner;$/;"	v
parse_args	C.c	/^static char **parse_args(char **argv, char *file, int line)$/;"	f	file:
remove_dir	C.c	/^static void remove_dir(char *path)$/;"	f	file:
root_dir	C.c	/^char *root_dir;$/;"	v
sa_concat	C.c	/^static char **sa_concat(char **x, char *y)$/;"	f	file:
sa_merge	C.c	/^static char **sa_merge(char **x, char **y)$/;"	f	file:
save_specs	C.c	/^static void save_specs(void)$/;"	f	file:
setup_dir	C.c	/^void setup_dir(void)$/;"	f
show_disassembly	C.c	/^int show_disassembly;$/;"	v
show_version	C.c	/^static void show_version(void)$/;"	f	file:
spec	C.c	/^char spec[65536];$/;"	v
spec_size	C.c	/^int spec_size;			\/\/ -1 if not used$/;"	v
split_tokens	C.c	/^static char **split_tokens(char *line)$/;"	f	file:
src_fp	C.c	/^FILE *src_fp;$/;"	v
src_lines	C.c	/^char **src_lines;$/;"	v
store_dir	C.c	/^char *store_dir;$/;"	v
str_concat	C.c	/^static char *str_concat(char *base, char *add)$/;"	f	file:
str_dup	C.c	/^static char *str_dup(char *str)$/;"	f	file:
temp_dir	C.c	/^char *temp_dir;$/;"	v
update_cache	C.c	/^static void update_cache(void)$/;"	f	file:
usage	C.c	/^static void usage(void)$/;"	f	file:
use_debugger	C.c	/^int use_debugger;$/;"	v
use_main	C.c	/^int use_main;$/;"	v
use_plusplus	C.c	/^int use_plusplus;$/;"	v
